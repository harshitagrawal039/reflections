What happens when you initialize a repository? Why do you need to do it?
	It contains a .git directory inside it. We need to do it because after this only 
	all the information about commits(meta-data) will be stored and then only other 
	git commands like status and log will work.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging area: a subset of working directory which we really want to commit.
	It offers us flexibility to add multiple files together to a commit.

How can you use the staging area to make sure you have one commit per logical
change?
	Add one file at a time to the staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches would help in parallel work. Suppose I want to develop some code and
	my friend also wants to develop same code then we both can create separate
	branches and continue doing and testing.

How do the diagrams help you visualize the branch structure?
	Greatly! With diagrams we know how git stores commits and which commits are
	reachable from where and so on.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Git automatically merge the two branches according to some rules and make a new
	commit. This new commit stores information about both of the parents and the new
	merged commit is the same branch which was checked out. After this we can delete
	the other branch as all the commits in that branch can be accessed now(commits are shown
	in their time order).

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?